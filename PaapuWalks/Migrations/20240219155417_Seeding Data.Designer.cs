// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaapuWalks.Data;

#nullable disable

namespace PaapuWalks.Migrations
{
    [DbContext(typeof(PaapuWalksDbContext))]
    [Migration("20240219155417_Seeding Data")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaapuWalks.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a55170e-ac65-48f4-9c1f-48af7dd6411b"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("816b9f81-2dd7-4347-8b28-6935b7932da7"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("8300acfc-fd4d-4d4c-80c2-9daf6ceae8f9"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("PaapuWalks.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdcf18b1-8958-43de-8ef4-0274004930c3"),
                            Code = "CHN",
                            Name = "Chennai"
                        },
                        new
                        {
                            Id = new Guid("a0914c07-d365-4d95-20d6-08dc2d53ce90"),
                            Code = "HYD",
                            Name = "Hyderabad"
                        },
                        new
                        {
                            Id = new Guid("43232ee6-8f59-451a-20d7-08dc2d53ce90"),
                            Code = "KLR",
                            Name = "Kerala"
                        },
                        new
                        {
                            Id = new Guid("139333e8-cd54-4f89-d92e-08dc2d5648a8"),
                            Code = "BLR",
                            Name = "Banglore"
                        });
                });

            modelBuilder.Entity("PaapuWalks.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("PaapuWalks.Models.Domain.Walk", b =>
                {
                    b.HasOne("PaapuWalks.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaapuWalks.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
